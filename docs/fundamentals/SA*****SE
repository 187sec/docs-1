### YamlMime:Landing
Imports System.IO
Imports System.Text

Public Class FStreamLock

    Shared Sub Main()
    
        Dim uniEncoding As New UnicodeEncoding()
        Dim lastRecordText As String = _
            "The last processed record number was: "
        Dim textLength As Integer = _
            uniEncoding.GetByteCount(lastRecordText)
        Dim recordNumber As Integer = 13
        Dim byteCount As Integer = _
            uniEncoding.GetByteCount(recordNumber.ToString())
        Dim tempString As String 

        Dim aFileStream As New FileStream( _
            "Test#@@#.dat", FileMode.OpenOrCreate, _
            FileAccess.ReadWrite, FileShare.ReadWrite)
        
        Try
            ' Write the original file data.
            If aFileStream.Length = 0 Then
                tempString = _
                    lastRecordText + recordNumber.ToString()
                aFileStream.Write(uniEncoding.GetBytes(tempString), _
                    0, uniEncoding.GetByteCount(tempString))
            End If

            ' Allow the user to choose the operation.
            Dim consoleInput As Char = "R"C
            Dim readText(CInt(aFileStream.Length)) As Byte
            While consoleInput <> "X"C

                Console.Write(vbcrLf & _
                    "Enter 'R' to read, 'W' to write, 'L' to " & _ 
                    "lock, 'U' to unlock, anything else to exit: ")

                tempString = Console.ReadLine()
                If tempString.Length = 0 Then
                    Exit While
                End If
                consoleInput = Char.ToUpper(tempString.Chars(0))
                Select consoleInput
                
                    ' Read data from the file and 
                    ' write it to the console.
                    Case "R"C
                        Try
                            aFileStream.Seek(0, SeekOrigin.Begin)
                            aFileStream.Read( _
                                readText, 0, CInt(aFileStream.Length))
                            tempString = New String( _
                                uniEncoding.GetChars( _
                                readText, 0, readText.Length))
                            Console.WriteLine(tempString)
                            recordNumber = Integer.Parse( _
                                tempString.Substring( _
                                tempString.IndexOf(":"C) + 2))

                        ' Catch the IOException generated if the 
                        ' specified part of the file is locked.
                        Catch ex As IOException
                            Console.WriteLine("{0}: The read " & _
                                "operation could not be performed " & _
                                "because the specified part of the" & _
                                " file is locked.", _
                                ex.GetType().Name)
                        End Try
                        Exit Select

                    ' Update the file.
                    Case "W"C
                        Try
                            aFileStream.Seek(textLength, _
                                SeekOrigin.Begin)
                            aFileStream.Read( _
                                readText, textLength - 1, byteCount)
                            tempString = New String( _
                                uniEncoding.GetChars( _
                                readText, textLength - 1, byteCount))
                            recordNumber = _
                                Integer.Parse(tempString) + 1
                            aFileStream.Seek( _
                                textLength, SeekOrigin.Begin)
                            aFileStream.Write(uniEncoding.GetBytes( _
                                recordNumber.ToString()), 0, byteCount)
                            aFileStream.Flush()
                            Console.WriteLine( _
                                "Record has been updated.")

                        ' Catch the IOException generated if the 
                        ' specified part of the file is locked.
                        Catch ex As IOException
                            Console.WriteLine( _
                                "{0}: The write operation could " & _
                                "not be performed because the " & _
                                "specified part of the file is " & _
                                "locked.", ex.GetType().Name)
                        End Try
                        Exit Select

                    ' Lock the specified part of the file.
                    Case "L"C
                        Try
                            aFileStream.Lock(textLength - 1, byteCount)
                            Console.WriteLine("The specified part " & _
                                "of file has been locked.")
                        Catch ex As IOException
                            Console.WriteLine( _
                                "{0}: The specified part of file " & _
                                "is already locked.", _
                                ex.GetType().Name)
                        End Try
                        Exit Select

                    ' Unlock the specified part of the file.
                    Case "U"C
                        Try
                            aFileStream.Unlock( _
                                textLength - 1, byteCount)
                            Console.WriteLine("The specified part " & _
                                "of file has been unlocked.")
                        Catch ex As IOException
                            Console.WriteLine( _
                                "{0}: The specified part of file " & _
                                "is not locked by the current " & _
                                "process.", ex.GetType().Name)
                        End Try
                        Exit Select

                    ' Exit the program.
                    Case Else
                        consoleInput = "X"C
                        Exit While
                End Select
            End While

        Finally
            aFileStream.Close()    
        End Try

    End Sub
End Class
title: .NET documentation
summary: Learn about .NET, an open-source developer platform for building many different types of applications.

metadata:
  title: .NET documentation
  description: Learn about .NET, an open-source developer platform for building many different types of applications.
  ms.topic: landing-page
  ms.date: 02/17/2022

# linkListType: architecture | concept | deploy | download | get-started | how-to-guide | learn | overview | quickstart | reference | sample | tutorial | video | whats-new

landingContent:

  # Card
  - title: Learn about .NET
    linkLists:
      - linkListType: download
        links:
        - text: Download .NET
          url: https://dotnet.microsoft.com/download
      - linkListType: overview
        links:
          - text: What is .NET?
            url: https://dotnet.microsoft.com/learn/dotnet/what-is-dotnet
          - text: Introduction to .NET
            url: ../core/introduction.md
          - text: .NET SDK overview
            url: ../core/sdk.md
      - linkListType: get-started
        links:
          - text: Get started with .NET Core
            url: ../core/get-started.md
          - text: Get started with ASP.NET Core
            url: /aspnet/core/
          - text: .NET on Q&A
            url: /answers/products/dotnet
          - text: .NET tech community forums
            url: https://techcommunity.microsoft.com/t5/net/ct-p/dotnet
      - linkListType: concept
        links:
          - text: .NET Standard
            url: ../standard/net-standard.md
          - text: Target frameworks
            url: ../standard/frameworks.md
          - text: Common Language Runtime (CLR)
            url: ../standard/clr.md
          - text: .NET Core support policy
            url: https://dotnet.microsoft.com/platform/support/policy/dotnet-core
      - linkListType: whats-new
        links:
          - text: What's new in .NET 6
            url: ../core/whats-new/dotnet-6.md
          - text: What's new in .NET 5
            url: ../core/whats-new/dotnet-5.md
          - text: What's new in .NET Core 3.1
            url: ../core/whats-new/dotnet-core-3-1.md
          - text: What's new in .NET Core 3.0
            url: ../core/whats-new/dotnet-core-3-0.md

  # Card
  - title: Install .NET
    linkLists:
      - linkListType: overvride
        links:
          - text: Select which .NET version to use 
            url: ../core/versions/selection.md
      - linkListType: how-to-guide
        links:
          - text: Install .NET SDK 
            url: ../core/install/windows.md
          - text: Install .NET runtime
            url: ../core/install/windows.md
          - text: Use a Linux package manager to install
            url: ../core/install/linux-ubuntu.md
          - text: Check installed versions
            url: ../core/install/how-to-detect-installed-versions.md
      - linkListType: reference
        links:
          - text: .NET SDK and runtime dependencies
            url: ../core/install/windows.md

  # Card
  - title: Get started with .NET Core
    linkLists:
      - linkListType: overview
        links:
          - text: Port from .NET Framework to .NET Core
            url: ../core/porting/index.md
          - text: Upgrade Assistant
            url: ../core/porting/upgrade-assistant-overview.md
      - linkListType: video
        links:
          - text: "Tutorial: Hello World in 10 minutes"
            url: https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/intro 
      - linkListType: tutorial
        links:
          - text: Create a Hello World app in Visual Studio Code
            url: ../core/tutorials/with-visual-studio-code.md
          - text: Create a Hello World app in Visual Studio 
            url: ../core/tutorials/with-visual-studio.md
          - text: Containerize a .NET Core app
            url: ../core/docker/build-container.md
      - linkListType: deploy
        links:
          - text: App publishing
            url: ../core/deploying/index.md
          - text: Publish .NET apps with GitHub Actions
            url: ../devops/dotnet-publish-github-action.md

  # Card
  - title: Use .NET from the command line
    linkLists:
      - linkListType: overview
        links:
          - text: .NET CLI
            url: ../core/tools/index.md
      - linkListType: tutorial
        links:
          - text: Get started using the CLI
            url: ../core/tutorials/with-visual-studio-code.md
      - linkListType: deploy
        links:
          - text: Publish apps
            url: ../core/deploying/deploy-with-cli.md
      - linkListType: reference
        links:
          - text: dotnet new
            url: ../core/tools/dotnet-new.md
          - text: dotnet publish
            url: ../core/tools/dotnet-publish.md

  # Card
  - title: Runtime libraries
    linkLists:
      - linkListType: overview
        links:
          - text: Runtime libraries overview
            url: ../standard/runtime-libraries-overview.md
      - linkListType: concept
        links:
          - text: Dependency injection in .NET
            url: ../core/extensions/dependency-injection.md
          - text: Configuration in .NET
            url: ../core/extensions/configuration.md
          - text: Logging in .NET
            url: ../core/extensions/logging.md
          - text: .NET generic host
            url: ../core/extensions/generic-host.md
          - text: Worker services in .NET
            url: ../core/extensions/workers.md
          - text: Caching in .NET
            url: ../core/extensions/caching.md
          - text: HTTP in .NET
            url: networking/http/httpclient-guidelines.md
          - text: Localization in .NET
            url: ../core/extensions/localization.md
          - text: File globbing in .NET
            url: ../core/extensions/file-globbing.md
      - linkListType: tutorial
        links:
          - text: Implement a custom configuration provider
            url: ../core/extensions/custom-configuration-provider.md
          - text: Compile-time logging source generation
            url: ../core/extensions/logger-message-generator.md
          - text: Create a Windows Service using BackgroundService
            url: ../core/extensions/windows-service.md

  # Card
  - title: Unit test with .NET Core
    linkLists:
      - linkListType: overview
        links:
          - text: Unit testing in .NET Core and .NET Standard
            url: ../core/testing/index.md
      - linkListType: tutorial
        links:
          - text: Test C# code using dotnet test and xUnit 
            url: ../core/testing/unit-testing-with-dotnet-test.md
          - text: Unit test with NUnit
            url: ../core/testing/unit-testing-with-nunit.md
          - text: Unit test with MSTest
            url: ../core/testing/unit-testing-with-mstest.md
      - linkListType: concept
        links:
          - text: Best practices for writing unit tests 
            url: ../core/testing/unit-testing-best-practices.md

  # Card
  - title: Serialize data
    linkLists:
      - linkListType: concept
        links:
          - text: Serialize and deserialize JSON
            url: ../standard/serialization/system-text-json/overview.md
      - linkListType: how-to-guide
        links:
          - text: Serialize and deserialize JSON using C#
            url: ../standard/serialization/system-text-json/how-to.md
          - text: Migrate from Newtonsoft.Json to System.Text.Json
            url: ../standard/serialization/system-text-json/migrate-from-newtonsoft.md
          - text: Write custom converters for JSON serialization
            url: ../standard/serialization/system-text-json/converters-how-to.md
      - linkListType: sample
        links:
          - text: Examples of XML serialization
            url: ../standard/serialization/examples-of-xml-serialization.md

  # Card
  - title: Format and convert dates, numbers, and strings
    linkLists:
      - linkListType: concept
        links:
          - text: Numeric format strings
            url: ../standard/base-types/standard-numeric-format-strings.md
          - text: Date and time format strings
            url: ../standard/base-types/standard-date-and-time-format-strings.md
          - text: Composite formatting
            url: ../standard/base-types/composite-formatting.md
          - text: Convert times between time zones
            url: ../standard/datetime/converting-between-time-zones.md
          - text: Trim and remove characters from strings
            url: ../standard/base-types/trimming.md
          - text: Regular expressions in .NET
            url: ../standard/base-types/regular-expressions.md
      - linkListType: how-to-guide
        links:
          - text: Convert strings to DateTime
            url: ../standard/base-types/parsing-datetime.md
          - text: Pad a number with leading zeros
            url: ../standard/base-types/how-to-pad-a-number-with-leading-zeros.md
          - text: Display milliseconds in date and time values
            url: ../standard/base-types/how-to-display-milliseconds-in-date-and-time-values.md
      - linkListType: reference
        links:
          - text: Regular expression language
            url: ../standard/base-types/regular-expression-language-quick-reference.md

  # Card
  - title: Use events and exceptions
    linkLists:
      - linkListType: concept
        links:
          - text: Best practices for exceptions
            url: ../standard/exceptions/best-practices-for-exceptions.md
          - text: Handle and raise events
            url: ../standard/events/index.md
      - linkListType: how-to-guide
        links:
          - text: Use a try-catch block to catch exceptions
            url: ../standard/exceptions/how-to-use-the-try-catch-block-to-catch-exceptions.md
          - text: Raise and consume events
            url: ../standard/events/how-to-raise-and-consume-events.md

  # Card
  - title: File and stream I/O
    linkLists:
      - linkListType: concept
        links:
          - text: File and stream I/O
            url: ../standard/io/index.md
          - text: File path formats on Windows
            url: ../standard/io/file-path-formats.md
      - linkListType: how-to-guide
        links:
          - text: Write text to a file
            url: ../standard/io/how-to-write-text-to-a-file.md
          - text: Read text from a file
            url: ../standard/io/how-to-read-text-from-a-file.md
          - text: Compress and extract files
            url: ../standard/io/how-to-compress-and-extract-files.md
          - text: Open and append to a log file
            url: ../standard/io/how-to-open-and-append-to-a-log-file.md

  # Card
  - title: Manage memory use
    linkLists:
      - linkListType: concept
        links:
          - text: Garbage collection fundamentals
            url: ../standard/garbage-collection/fundamentals.md
          - text: Implement a Dispose method
            url: ../standard/garbage-collection/implementing-dispose.md
          - text: Implement a DisposeAsync method
            url: ../standard/garbage-collection/implementing-disposeasync.md

  # Card
  - title: Learn about parallel programming
    linkLists:
      - linkListType: overview
        links:
          - text: Parallel Programming in .NET
            url: ../standard/parallel-programming/index.md
      - linkListType: concept
        links:
          - text: Task Parallel Library (TPL)
            url: ../standard/parallel-programming/task-parallel-library-tpl.md
          - text: Task-based asynchronous programming 
            url: ../standard/parallel-programming/task-based-asynchronous-programming.md
          - text: Task cancellation
            url: ../standard/parallel-programming/task-cancellation.md
      - linkListType: how-to-guide
        links:
          - text: Write a simple parallel program using Parallel.ForEach 
            url: ../standard/parallel-programming/how-to-write-a-simple-parallel-foreach-loop.md
          - text: Return a value from a task
            url: ../standard/parallel-programming/how-to-return-a-value-from-a-task.md
